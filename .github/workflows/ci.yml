name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet: [2.1.x, 3.1.x, 5.0.100-preview.3.20216.6]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: ðŸ”¨ Use .NET Core 2.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "2.1.x"
      - name: ðŸ”¨ Use .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - name: ðŸ”¨ Use .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100-preview.3.20216.6"
      - name: ðŸª“ **DOTNET HACK** ðŸª“
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
