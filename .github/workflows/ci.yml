name: Continuous Integration
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install .NET Core 2.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "2.1.x"
      - name: Install .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - name: Install .NET 5 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100-preview.3.20216.6"
      - name: Merge installed .NET SDKs
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
      - name: Run tests
        run: dotnet test --verbosity normal
  pack:
    name: Pack
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install .NET 5 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100-preview.3.20216.6"
      - name: Create packages
        run: dotnet pack --configuration Release --output ./packages
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: NuGet packages
          key: nuget-packages
          path: packages/*.*
  deploy: 
    name: Deploy
    # if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
    needs: [pack]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          key: nuget-packages
          path: packages
      - name: Push packages
        run: |
          ls packages
          dotnet nuget push packages/*.nupkg --api-key BOGUS
